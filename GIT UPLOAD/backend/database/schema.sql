-- Drop tables if they exist (in reverse order of creation to avoid foreign key constraints)
DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS LOAN_ACCOUNT;
DROP TABLE IF EXISTS MANAGES;
DROP TABLE IF EXISTS AVAIL;
DROP TABLE IF EXISTS LOAN;
DROP TABLE IF EXISTS ACCOUNT;
DROP TABLE IF EXISTS EMPLOYEE;
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS BRANCH;
DROP TABLE IF EXISTS BANK;

-- Create BANK table
CREATE TABLE BANK (
    B_Code INT AUTO_INCREMENT PRIMARY KEY,
    B_Name VARCHAR(50) NOT NULL,
    Address VARCHAR(100) NOT NULL
);

-- Create BRANCH table
CREATE TABLE BRANCH (
    Branch_ID INT AUTO_INCREMENT PRIMARY KEY,
    Branch_Name VARCHAR(50) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    B_Code INT,
    FOREIGN KEY (B_Code) REFERENCES BANK(B_Code) ON DELETE CASCADE
);

-- Create CUSTOMER table
CREATE TABLE CUSTOMER (
    Customer_ID INT AUTO_INCREMENT PRIMARY KEY,
    F_Name VARCHAR(50) NOT NULL,
    L_Name VARCHAR(50),
    Phone_No VARCHAR(15) NOT NULL,
    Address VARCHAR(100) NOT NULL
);

-- Create EMPLOYEE table
CREATE TABLE EMPLOYEE (
    Emp_ID INT AUTO_INCREMENT PRIMARY KEY,
    F_Name VARCHAR(50) NOT NULL,
    L_Name VARCHAR(50),
    Phone_No VARCHAR(15) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    Branch_ID INT,
    FOREIGN KEY (Branch_ID) REFERENCES BRANCH(Branch_ID) ON DELETE SET NULL
);

-- Create ACCOUNT table
CREATE TABLE ACCOUNT (
    Acc_Number INT AUTO_INCREMENT PRIMARY KEY,
    Balance DECIMAL(15, 2) NOT NULL DEFAULT 0.00,
    Type VARCHAR(20) NOT NULL,
    Customer_ID INT,
    FOREIGN KEY (Customer_ID) REFERENCES CUSTOMER(Customer_ID) ON DELETE CASCADE
);

-- Create LOAN table
CREATE TABLE LOAN (
    Loan_ID INT AUTO_INCREMENT PRIMARY KEY,
    Amount DECIMAL(15, 2) NOT NULL,
    Customer_ID INT,
    FOREIGN KEY (Customer_ID) REFERENCES CUSTOMER(Customer_ID) ON DELETE CASCADE
);

-- Create AVAIL table (relationship between CUSTOMER and LOAN)
CREATE TABLE AVAIL (
    Customer_ID INT,
    Loan_ID INT,
    PRIMARY KEY (Customer_ID, Loan_ID),
    FOREIGN KEY (Customer_ID) REFERENCES CUSTOMER(Customer_ID) ON DELETE CASCADE,
    FOREIGN KEY (Loan_ID) REFERENCES LOAN(Loan_ID) ON DELETE CASCADE
);

-- Create MANAGES table (relationship between EMPLOYEE and ACCOUNT)
CREATE TABLE MANAGES (
    Emp_ID INT,
    Acc_Number INT,
    PRIMARY KEY (Emp_ID, Acc_Number),
    FOREIGN KEY (Emp_ID) REFERENCES EMPLOYEE(Emp_ID) ON DELETE CASCADE,
    FOREIGN KEY (Acc_Number) REFERENCES ACCOUNT(Acc_Number) ON DELETE CASCADE
);

-- Create LOAN_ACCOUNT table
CREATE TABLE LOAN_ACCOUNT (
    Loan_ID INT,
    Type VARCHAR(20) NOT NULL,
    PRIMARY KEY (Loan_ID),
    FOREIGN KEY (Loan_ID) REFERENCES LOAN(Loan_ID) ON DELETE CASCADE
);

-- Create PAYMENT table
CREATE TABLE PAYMENT (
    Pay_ID INT AUTO_INCREMENT PRIMARY KEY,
    Pay_Amount DECIMAL(15, 2) NOT NULL,
    Pay_Date DATE NOT NULL,
    Loan_ID INT,
    FOREIGN KEY (Loan_ID) REFERENCES LOAN(Loan_ID) ON DELETE CASCADE
);

-- Create TRANSACTIONS table
CREATE TABLE TRANSACTIONS (
    id INT AUTO_INCREMENT PRIMARY KEY,
    sender_account_id INT,
    receiver_account_id INT,
    amount DECIMAL(15, 2) NOT NULL,
    description VARCHAR(100),
    date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_account_id) REFERENCES ACCOUNT(Acc_Number) ON DELETE SET NULL,
    FOREIGN KEY (receiver_account_id) REFERENCES ACCOUNT(Acc_Number) ON DELETE SET NULL
);

