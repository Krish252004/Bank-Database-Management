-- Drop tables if they exist (in reverse order of creation to avoid foreign key constraints)
DROP TABLE IF EXISTS TRANSACTIONS;
DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS LOAN_ACCOUNT;
DROP TABLE IF EXISTS MANAGES;
DROP TABLE IF EXISTS AVAIL;
DROP TABLE IF EXISTS LOAN;
DROP TABLE IF EXISTS ACCOUNT;
DROP TABLE IF EXISTS EMPLOYEE;
DROP TABLE IF EXISTS CUSTOMER;
DROP TABLE IF EXISTS BRANCH;
DROP TABLE IF EXISTS BANK;

-- Create tables in order of dependencies (parent tables first)

-- 1. Create BANK table (no dependencies)
CREATE TABLE BANK (
    B_Code INT AUTO_INCREMENT PRIMARY KEY,
    B_Name VARCHAR(50) NOT NULL,
    Address VARCHAR(100) NOT NULL
) ENGINE=InnoDB;

-- 2. Create BRANCH table (depends on BANK)
CREATE TABLE BRANCH (
    Branch_ID INT AUTO_INCREMENT PRIMARY KEY,
    Branch_Name VARCHAR(50) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    B_Code INT,
    IFSC_Code VARCHAR(11) NOT NULL UNIQUE,
    FOREIGN KEY (B_Code) REFERENCES BANK(B_Code) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 3. Create CUSTOMER table (no dependencies)
CREATE TABLE CUSTOMER (
    Customer_ID INT AUTO_INCREMENT PRIMARY KEY,
    F_Name VARCHAR(50) NOT NULL,
    L_Name VARCHAR(50),
    Phone_No VARCHAR(15) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    Email VARCHAR(100) UNIQUE,
    Password VARCHAR(255)
) ENGINE=InnoDB;

-- 4. Create EMPLOYEE table (depends on BRANCH)
CREATE TABLE EMPLOYEE (
    Emp_ID INT AUTO_INCREMENT PRIMARY KEY,
    F_Name VARCHAR(50) NOT NULL,
    L_Name VARCHAR(50),
    Phone_No VARCHAR(15) NOT NULL,
    Address VARCHAR(100) NOT NULL,
    Branch_ID INT,
    Email VARCHAR(100) UNIQUE,
    Password VARCHAR(255),
    FOREIGN KEY (Branch_ID) REFERENCES BRANCH(Branch_ID) ON DELETE SET NULL
) ENGINE=InnoDB;

-- 5. Create ACCOUNT table (depends on CUSTOMER and BRANCH)
CREATE TABLE ACCOUNT (
    Acc_Number INT AUTO_INCREMENT PRIMARY KEY,
    Balance DECIMAL(15, 2) NOT NULL DEFAULT 0.00,
    Type VARCHAR(20) NOT NULL,
    Opening_Date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    Status VARCHAR(20) NOT NULL DEFAULT 'Active',
    Customer_ID INT,
    Branch_ID INT,
    Nominee_Name VARCHAR(100),
    Nominee_Relation VARCHAR(50),
    Nominee_DOB DATE,
    FOREIGN KEY (Customer_ID) REFERENCES CUSTOMER(Customer_ID) ON DELETE CASCADE,
    FOREIGN KEY (Branch_ID) REFERENCES BRANCH(Branch_ID) ON DELETE SET NULL
) ENGINE=InnoDB;

-- 6. Create LOAN table (depends on CUSTOMER)
CREATE TABLE LOAN (
    Loan_ID INT AUTO_INCREMENT PRIMARY KEY,
    Amount DECIMAL(15, 2) NOT NULL,
    Customer_ID INT,
    Interest_Rate DECIMAL(5, 2) NOT NULL,
    Term INT NOT NULL,
    Type VARCHAR(50) NOT NULL,
    Purpose VARCHAR(100) NOT NULL,
    Status VARCHAR(20) NOT NULL DEFAULT 'Pending',
    Created_At TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (Customer_ID) REFERENCES CUSTOMER(Customer_ID) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 7. Create AVAIL table (depends on CUSTOMER and LOAN)
CREATE TABLE AVAIL (
    Customer_ID INT,
    Loan_ID INT,
    PRIMARY KEY (Customer_ID, Loan_ID),
    FOREIGN KEY (Customer_ID) REFERENCES CUSTOMER(Customer_ID) ON DELETE CASCADE,
    FOREIGN KEY (Loan_ID) REFERENCES LOAN(Loan_ID) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 8. Create MANAGES table (depends on EMPLOYEE and ACCOUNT)
CREATE TABLE MANAGES (
    Emp_ID INT,
    Acc_Number INT,
    PRIMARY KEY (Emp_ID, Acc_Number),
    FOREIGN KEY (Emp_ID) REFERENCES EMPLOYEE(Emp_ID) ON DELETE CASCADE,
    FOREIGN KEY (Acc_Number) REFERENCES ACCOUNT(Acc_Number) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 9. Create LOAN_ACCOUNT table (depends on LOAN)
CREATE TABLE LOAN_ACCOUNT (
    Loan_ID INT,
    Type VARCHAR(20) NOT NULL,
    Balance DECIMAL(15, 2) NOT NULL DEFAULT 0.00,
    Status VARCHAR(20) NOT NULL DEFAULT 'Active',
    PRIMARY KEY (Loan_ID),
    FOREIGN KEY (Loan_ID) REFERENCES LOAN(Loan_ID) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 10. Create PAYMENT table (depends on LOAN)
CREATE TABLE PAYMENT (
    Pay_ID INT AUTO_INCREMENT PRIMARY KEY,
    Pay_Amount DECIMAL(15, 2) NOT NULL,
    Pay_Date DATE NOT NULL,
    Loan_ID INT,
    FOREIGN KEY (Loan_ID) REFERENCES LOAN(Loan_ID) ON DELETE CASCADE
) ENGINE=InnoDB;

-- 11. Create TRANSACTIONS table (depends on ACCOUNT)
CREATE TABLE TRANSACTIONS (
    Transaction_ID INT AUTO_INCREMENT PRIMARY KEY,
    Sender_Acc_Number INT,
    Receiver_Acc_Number INT,
    Amount DECIMAL(15, 2) NOT NULL,
    Transaction_Type VARCHAR(20) NOT NULL,
    Description VARCHAR(100),
    Status VARCHAR(20) NOT NULL DEFAULT 'Completed',
    Transaction_Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (Sender_Acc_Number) REFERENCES ACCOUNT(Acc_Number) ON DELETE SET NULL,
    FOREIGN KEY (Receiver_Acc_Number) REFERENCES ACCOUNT(Acc_Number) ON DELETE SET NULL
) ENGINE=InnoDB;

-- Add missing columns to LOAN table if they don't exist
ALTER TABLE LOAN
ADD COLUMN IF NOT EXISTS Interest_Rate DECIMAL(5, 2) NOT NULL DEFAULT 8.5,
ADD COLUMN IF NOT EXISTS Term INT NOT NULL DEFAULT 20,
ADD COLUMN IF NOT EXISTS Type VARCHAR(50) NOT NULL DEFAULT 'Personal',
ADD COLUMN IF NOT EXISTS Purpose VARCHAR(100) NOT NULL DEFAULT 'General',
ADD COLUMN IF NOT EXISTS Status VARCHAR(20) NOT NULL DEFAULT 'Pending',
ADD COLUMN IF NOT EXISTS Created_At TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

